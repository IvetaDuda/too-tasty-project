{"version":3,"sources":["js/header-menu.js","js/masonry-layout-gallery.js","index.js"],"names":["mobileMenu","document","querySelector","openMenuBtn","closeMenuBtn","overlayMenu","toggleMenu","isMenuOpen","getAttribute","setAttribute","classList","toggle","bodyScrollLock","body","addEventListener","window","matchMedia","e","matches","remove","enableBodyScroll","scrollbar","clientWidth","innerWidth","console","log","style","overflow","marginLeft","preventDefault","FormData","currentTarget","forEach","value","name","$grid","$","masonry","itemSelector","columnWidth","gutter","on","toggleClass","imagesLoaded","progress"],"mappings":";;;AAAA,MACQA,MAAAA,EAAaC,SAASC,cAAc,sBACpCC,EAAcF,SAASC,cAAc,iBACrCE,EAAeH,SAASC,cAAc,kBACtCG,EAAcJ,SAASC,cAAc,iBAErCI,EAAa,KACXC,MAAAA,EAA2D,SAA9CJ,EAAYK,aAAa,mBAA+B,EAC3EL,EAAYM,aAAa,iBAAkBF,GAC3CP,EAAWU,UAAUC,OAAO,WAG5BC,eAD0BL,EAAmC,mBAAtB,qBACNN,SAASY,OAG5CV,EAAYW,iBAAiB,QAASR,GACtCF,EAAaU,iBAAiB,QAASR,GACvCD,EAAYS,iBAAiB,QAASR,GAItCS,OAAOC,WAAW,sBAAsBF,iBAAiB,SAAUG,IAC5DA,EAAEC,UACPlB,EAAWU,UAAUS,OAAO,WAC5BhB,EAAYM,aAAa,iBAAiB,GAC1CG,eAAeQ,iBAAiBnB,SAASY,UAzB7C,GA8BAZ,SAASa,iBAAiB,mBAAoB,WACxCO,IAAAA,EAAYpB,SAASY,KAAKS,YAAcP,OAAOQ,WAAa,KAChEC,QAAQC,IAAIJ,GACZpB,SAASC,cAAc,uBAAuBY,iBAAiB,QAAS,WACtEb,SAASY,KAAKa,MAAMC,SAAW,SAC/B1B,SAASC,cAAc,cAAcwB,MAAME,WAAaP,IAE1DpB,SAASC,cAAc,mBAAmBY,iBAAiB,QAAS,WAClEb,SAASY,KAAKa,MAAMC,SAAW,UAC/B1B,SAASC,cAAc,cAAcwB,MAAME,WAAa,UAO1D3B,SAASC,cAAc,oBAAoBY,iBAAiB,SAAUG,IACpEA,EAAEY,iBAEEC,IAAAA,SAASb,EAAEc,eAAeC,QAAQ,CAACC,EAAOC,IAASV,QAAQC,IAAI;;ACjDvE,IAAIU,EAAQC,EAAE,SAASC,QAAQ,CAC7BC,aAAc,cACdC,YAAY,oBACVC,OAAQ,kBAGVL,EAAMM,GAAI,QAAS,cAAe,WAEhCL,EAAG,MAAOM,YAAY,sBAEtBP,EAAME,YAKVF,EAAMQ,eAAeC,SAAU,WAC7BT,EAAME;;ACdR,aAFA,QAAA,oBACA,QAAA,oBACA,QAAA","file":"src.281f64cb.js","sourceRoot":"../src","sourcesContent":["(() => {\n  const mobileMenu = document.querySelector('.js-menu-container');\n  const openMenuBtn = document.querySelector('.js-open-menu');\n  const closeMenuBtn = document.querySelector('.js-close-menu');\n  const overlayMenu = document.querySelector('.overlay-menu');\n\n  const toggleMenu = () => {\n    const isMenuOpen = openMenuBtn.getAttribute('aria-expanded') === 'true' || false;\n    openMenuBtn.setAttribute('aria-expanded', !isMenuOpen);\n    mobileMenu.classList.toggle('is-open');\n\n    const scrollLockMethod = !isMenuOpen ? 'disableBodyScroll' : 'enableBodyScroll';\n    bodyScrollLock[scrollLockMethod](document.body);\n  };\n\n  openMenuBtn.addEventListener('click', toggleMenu);\n  closeMenuBtn.addEventListener('click', toggleMenu);\n  overlayMenu.addEventListener('click', toggleMenu);\n\n  // Закрываем мобильное меню на более широких экранах\n  // в случае изменения ориентации устройства.\n  window.matchMedia('(min-width: 768px)').addEventListener('change', e => {\n    if (!e.matches) return;\n    mobileMenu.classList.remove('is-open');\n    openMenuBtn.setAttribute('aria-expanded', false);\n    bodyScrollLock.enableBodyScroll(document.body);\n  });\n})();\n\n// modal //\ndocument.addEventListener('DOMContentLoaded', function () {\n  var scrollbar = document.body.clientWidth - window.innerWidth + 'px';\n  console.log(scrollbar);\n  document.querySelector('[href=\"#openModal\"]').addEventListener('click', function () {\n    document.body.style.overflow = 'hidden';\n    document.querySelector('#openModal').style.marginLeft = scrollbar;\n  });\n  document.querySelector('[href=\"#close\"]').addEventListener('click', function () {\n    document.body.style.overflow = 'visible';\n    document.querySelector('#openModal').style.marginLeft = '0px';\n  });\n});\n\n// modal-form//\n\n(() => {\n  document.querySelector('.js-speaker-form').addEventListener('submit', e => {\n    e.preventDefault();\n\n    new FormData(e.currentTarget).forEach((value, name) => console.log('${name}: ${value}'));\n  });\n})();\n","var $grid = $('.grid').masonry({\n  itemSelector: '.grid__item',\n  columnWidth:'.grid_columnWidth' ,\n    gutter: '.gutter_sizer'\n  });\n\n  $grid.on( 'click', '.grid__item', function() {\n    // change size of item via class\n    $( this ).toggleClass('grid__item_gigante');\n    // trigger layout\n    $grid.masonry();\n  });\n  \n\n// layout Masonry after each image loads\n$grid.imagesLoaded().progress( function() {\n  $grid.masonry();\n}); ","import './sass/main.scss';\nimport './js/header-menu';\nimport './js/masonry-layout-gallery';\n"]}